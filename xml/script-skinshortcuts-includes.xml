<includes>
	<include name="skinshortcuts-mainmenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<label>$LOCALIZE[342]</label>
			<label2>Common Shortcut</label2>
			<icon>DefaultMovies.png</icon>
			<thumb />
			<property name="labelID">movies</property>
			<property name="defaultID">movies</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(Videos,videodb://movies/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://movies/titles/,return)</property>
			<property name="list">videodb://movies/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">movies</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<label>$LOCALIZE[20343]</label>
			<label2>Common Shortcut</label2>
			<icon>DefaultTVShows.png</icon>
			<thumb />
			<property name="labelID">tvshows</property>
			<property name="defaultID">tvshows</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick>ActivateWindow(Videos,videodb://tvshows/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://tvshows/titles/,return)</property>
			<property name="list">videodb://tvshows/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">tvshows</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<label>$LOCALIZE[3]</label>
			<label2>Common Shortcut</label2>
			<icon>DefaultVideo.png</icon>
			<thumb />
			<property name="labelID">videos</property>
			<property name="defaultID">videos</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<label>$LOCALIZE[2]</label>
			<label2>Common Shortcut</label2>
			<icon>DefaultMusicAlbums.png</icon>
			<thumb />
			<property name="labelID">music</property>
			<property name="defaultID">music</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<label>$LOCALIZE[10002]</label>
			<label2>Common Shortcut</label2>
			<icon>DefaultPicture.png</icon>
			<thumb />
			<property name="labelID">pictures</property>
			<property name="defaultID">pictures</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<label>$LOCALIZE[15016]</label>
			<label2>Common Shortcut</label2>
			<icon>DefaultGameAddons.png</icon>
			<thumb />
			<property name="labelID">15016</property>
			<property name="defaultID">15016</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<label>$LOCALIZE[31091]</label>
			<label2>Custom shortcut</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">service.osmc.settings</property>
			<property name="defaultID">service.osmc.settings</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<label>$LOCALIZE[1036]</label>
			<label2>Common Shortcut</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">1036</property>
			<property name="defaultID">1036</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<label>$LOCALIZE[12600]</label>
			<label2>Common Shortcut</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">weather</property>
			<property name="defaultID">weather</property>
			<visible>!String.IsEmpty(Weather.Plugin)</visible>
			<onclick>ActivateWindow(Weather)</onclick>
			<property name="path">ActivateWindow(Weather)</property>
			<property name="list">Weather</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">weather</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<label>$LOCALIZE[10001]</label>
			<label2>Common Shortcut</label2>
			<icon>DefaultProgram.png</icon>
			<thumb />
			<property name="labelID">programs</property>
			<property name="defaultID">programs</property>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">programs</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		<item id="11">
			<property name="id">$NUMBER[11]</property>
			<label>$LOCALIZE[14204]</label>
			<label2>Common Shortcut</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">14204</property>
			<property name="defaultID">14204</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="12">
			<property name="id">$NUMBER[12]</property>
			<label>$LOCALIZE[341]</label>
			<label2>Common menu item</label2>
			<icon>DefaultDVDFull.png</icon>
			<thumb />
			<property name="labelID">341</property>
			<property name="defaultID">341</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="13">
			<property name="id">$NUMBER[13]</property>
			<label>$LOCALIZE[19021]</label>
			<label2>Common Shortcut</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">19021</property>
			<property name="defaultID">19021</property>
			<visible>False</visible>
			<onclick>noop</onclick>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="14">
			<property name="id">$NUMBER[14]</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Common Shortcut</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">settings</property>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">settings</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
			</item>
		<item id="15">
			<property name="id">$NUMBER[15]</property>
			<label>$LOCALIZE[33060]</label>
			<label2>Common Shortcut</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">33060</property>
			<property name="defaultID">33060</property>
			<onclick>ActivateWindow(shutdownmenu)</onclick>
			<property name="path">ActivateWindow(shutdownmenu)</property>
			<property name="list">shutdownmenu</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-33060</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
			</item>
		</include>
	<include />
	<include name="skinshortcuts-submenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[345]</label>
			<label2>Videos</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">345</property>
			<property name="defaultID">345</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(10025,"library://video/movies/years.xml/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/movies/years.xml/",return)</property>
			<property name="list">library://video/movies/years.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[135]</label>
			<label2>Videos</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(10025,"library://video/movies/genres.xml/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/movies/genres.xml/",return)</property>
			<property name="list">library://video/movies/genres.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[344]</label>
			<label2>Videos</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">344</property>
			<property name="defaultID">344</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(10025,"library://video/movies/actors.xml/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/movies/actors.xml/",return)</property>
			<property name="list">library://video/movies/actors.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[20348]</label>
			<label2>Videos</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20348</property>
			<property name="defaultID">20348</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>ActivateWindow(10025,"library://video/movies/directors.xml/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/movies/directors.xml/",return)</property>
			<property name="list">library://video/movies/directors.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">movies</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[345]</label>
			<label2>Videos</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">345</property>
			<property name="defaultID">345</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(10025,"library://video/tvshows/years.xml/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/tvshows/years.xml/",return)</property>
			<property name="list">library://video/tvshows/years.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[135]</label>
			<label2>Videos</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(10025,"library://video/tvshows/genres.xml/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/tvshows/genres.xml/",return)</property>
			<property name="list">library://video/tvshows/genres.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[344]</label>
			<label2>Videos</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">344</property>
			<property name="defaultID">344</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(10025,"library://video/tvshows/actors.xml/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/tvshows/actors.xml/",return)</property>
			<property name="list">library://video/tvshows/actors.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[20388]</label>
			<label2>Videos</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">20388</property>
			<property name="defaultID">20388</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>ActivateWindow(10025,"library://video/tvshows/studios.xml/",return)</onclick>
			<property name="path">ActivateWindow(10025,"library://video/tvshows/studios.xml/",return)</property>
			<property name="list">library://video/tvshows/studios.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">tvshows</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[1037]</label>
			<label2>Videos</label2>
			<icon>DefaultAddonVideo.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(Videos,Addons,return)</onclick>
			<property name="path">ActivateWindow(Videos,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),videos)</visible>
			<property name="group">videos</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[20389]</label>
			<label2>Common Shortcut</label2>
			<icon>DefaultMusicVideos.png</icon>
			<thumb />
			<property name="labelID">musicvideos</property>
			<property name="defaultID">musicvideos</property>
			<visible>[Library.HasContent(MusicVideos)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),videos)</visible>
			<onclick>ActivateWindow(Videos,videodb://musicvideos/titles/,return)</onclick>
			<property name="path">ActivateWindow(Videos,videodb://musicvideos/titles/,return)</property>
			<property name="list">videodb://musicvideos/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">videos</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">3</property>
			<label>$LOCALIZE[744]</label>
			<label2>Videos</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">744</property>
			<property name="defaultID">744</property>
			<onclick>ActivateWindow(Videos,Files,return)</onclick>
			<property name="path">ActivateWindow(Videos,Files,return)</property>
			<property name="list">Files</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),videos)</visible>
			<property name="group">videos</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[133]</label>
			<label2>$ADDON[script.skinshortcuts 32019]</label2>
			<icon>DefaultMusicArtists.png</icon>
			<thumb />
			<property name="labelID">133</property>
			<property name="defaultID">133</property>
			<onclick>ActivateWindow(Music,Artists,return)</onclick>
			<property name="path">ActivateWindow(Music,Artists,return)</property>
			<property name="list">Artists</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[132]</label>
			<label2>$ADDON[script.skinshortcuts 32019]</label2>
			<icon>DefaultMusicAlbums.png</icon>
			<thumb />
			<property name="labelID">132</property>
			<property name="defaultID">132</property>
			<onclick>ActivateWindow(Music,Albums,return)</onclick>
			<property name="path">ActivateWindow(Music,Albums,return)</property>
			<property name="list">Albums</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[134]</label>
			<label2>$ADDON[script.skinshortcuts 32019]</label2>
			<icon>DefaultMusicSongs.png</icon>
			<thumb />
			<property name="labelID">134</property>
			<property name="defaultID">134</property>
			<onclick>ActivateWindow(Music,Songs,return)</onclick>
			<property name="path">ActivateWindow(Music,Songs,return)</property>
			<property name="list">Songs</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[744]</label>
			<label2>$ADDON[script.skinshortcuts 32019]</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">744</property>
			<property name="defaultID">744</property>
			<onclick>ActivateWindow(Music,Files,Return)</onclick>
			<property name="path">ActivateWindow(Music,Files,Return)</property>
			<property name="list">Files</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[15100]</label>
			<label2>$ADDON[script.skinshortcuts 32019]</label2>
			<icon>DefaultFolder.png</icon>
			<thumb />
			<property name="labelID">15100</property>
			<property name="defaultID">15100</property>
			<onclick>ActivateWindow(Music,MusicLibrary,return)</onclick>
			<property name="path">ActivateWindow(Music,MusicLibrary,return)</property>
			<property name="list">MusicLibrary</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<property name="mainmenuid">4</property>
			<label>$LOCALIZE[1038]</label>
			<label2>$ADDON[script.skinshortcuts 32019]</label2>
			<icon>DefaultAddonMusic.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(Music,Addons,return)</onclick>
			<property name="path">ActivateWindow(Music,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">5</property>
			<label>$LOCALIZE[1039]</label>
			<label2>$ADDON[script.skinshortcuts 32020]</label2>
			<icon>DefaultAddonPicture.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),pictures)</visible>
			<property name="group">pictures</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[19019]</label>
			<label2>$ADDON[script.skinshortcuts 32017]</label2>
			<icon>DefaultTVShows.png</icon>
			<thumb />
			<property name="labelID">19019</property>
			<property name="defaultID">19019</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<onclick>ActivateWindow(TVChannels)</onclick>
			<property name="path">ActivateWindow(TVChannels)</property>
			<property name="list">TVChannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">14204</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[22020]</label>
			<label2>$ADDON[script.skinshortcuts 32017]</label2>
			<icon>DefaultTVShows.png</icon>
			<thumb />
			<property name="labelID">22020</property>
			<property name="defaultID">22020</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<onclick>ActivateWindow(TVGuide)</onclick>
			<property name="path">ActivateWindow(TVGuide)</property>
			<property name="list">TVGuide</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">14204</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[19163]</label>
			<label2>$ADDON[script.skinshortcuts 32017]</label2>
			<icon>DefaultTVShows.png</icon>
			<thumb />
			<property name="labelID">19163</property>
			<property name="defaultID">19163</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<onclick>ActivateWindow(TVRecordings)</onclick>
			<property name="path">ActivateWindow(TVRecordings)</property>
			<property name="list">TVRecordings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">14204</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[19040]</label>
			<label2>$ADDON[script.skinshortcuts 32017]</label2>
			<icon>DefaultTVShows.png</icon>
			<thumb />
			<property name="labelID">19040</property>
			<property name="defaultID">19040</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<onclick>ActivateWindow(TVTimers)</onclick>
			<property name="path">ActivateWindow(TVTimers)</property>
			<property name="list">TVTimers</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">14204</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[137]</label>
			<label2>$ADDON[script.skinshortcuts 32017]</label2>
			<icon>DefaultTVShows.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">137</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<onclick>ActivateWindow(TVSearch)</onclick>
			<property name="path">ActivateWindow(TVSearch)</property>
			<property name="list">TVSearch</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">14204</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">12</property>
			<label>$LOCALIZE[600]</label>
			<label2>Kodi Command</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">600</property>
			<property name="defaultID">600</property>
			<visible>[System.HasMediaAudioCD] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-341)</visible>
			<onclick>RipCD</onclick>
			<property name="path">RipCD</property>
			<property name="list">RipCD</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">341</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">12</property>
			<label>$LOCALIZE[31090]</label>
			<label2>Common menu item</label2>
			<icon>DefaultDVDFull.png</icon>
			<thumb />
			<property name="labelID">31090</property>
			<property name="defaultID">31090</property>
			<onclick>EjectTray()</onclick>
			<property name="path">EjectTray()</property>
			<property name="list">EjectTray()</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-341)</visible>
			<property name="group">341</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[19019]</label>
			<label2>$ADDON[script.skinshortcuts 32087]</label2>
			<icon>DefaultAudio.png</icon>
			<thumb />
			<property name="labelID">19019</property>
			<property name="defaultID">19019</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<onclick>ActivateWindow(RadioChannels)</onclick>
			<property name="path">ActivateWindow(RadioChannels)</property>
			<property name="list">RadioChannels</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">19021</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[22020]</label>
			<label2>$ADDON[script.skinshortcuts 32087]</label2>
			<icon>DefaultAudio.png</icon>
			<thumb />
			<property name="labelID">22020</property>
			<property name="defaultID">22020</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<onclick>ActivateWindow(RadioGuide)</onclick>
			<property name="path">ActivateWindow(RadioGuide)</property>
			<property name="list">RadioGuide</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">19021</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[19163]</label>
			<label2>$ADDON[script.skinshortcuts 32087]</label2>
			<icon>DefaultAudio.png</icon>
			<thumb />
			<property name="labelID">19163</property>
			<property name="defaultID">19163</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<onclick>ActivateWindow(RadioRecordings)</onclick>
			<property name="path">ActivateWindow(RadioRecordings)</property>
			<property name="list">RadioRecordings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">19021</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[19040]</label>
			<label2>$ADDON[script.skinshortcuts 32087]</label2>
			<icon>DefaultAudio.png</icon>
			<thumb />
			<property name="labelID">19040</property>
			<property name="defaultID">19040</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<onclick>ActivateWindow(RadioTimers)</onclick>
			<property name="path">ActivateWindow(RadioTimers)</property>
			<property name="list">RadioTimers</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">19021</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">13</property>
			<label>$LOCALIZE[137]</label>
			<label2>$ADDON[script.skinshortcuts 32087]</label2>
			<icon>DefaultAudio.png</icon>
			<thumb />
			<property name="labelID">137</property>
			<property name="defaultID">137</property>
			<visible>[System.HasPVRAddon] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<onclick>ActivateWindow(RadioSearch)</onclick>
			<property name="path">ActivateWindow(RadioSearch)</property>
			<property name="list">RadioSearch</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">19021</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">14</property>
			<label>Refresh Skin</label>
			<label2>Custom item</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">refreshskin</property>
			<property name="defaultID" />
			<onclick>ReloadSkin()</onclick>
			<property name="path">ReloadSkin()</property>
			<property name="list">ReloadSkin()</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[130]</label>
			<label2>Common Shortcut</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">130</property>
			<property name="defaultID">130</property>
			<onclick>ActivateWindow(systeminfo)</onclick>
			<property name="path">ActivateWindow(systeminfo)</property>
			<property name="list">systeminfo</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(filemanager)</onclick>
			<property name="path">ActivateWindow(filemanager)</property>
			<property name="list">filemanager</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">14</property>
			<label>$LOCALIZE[13200]</label>
			<label2>Common Shortcut</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">13200</property>
			<property name="defaultID">13200</property>
			<onclick>ActivateWindow(profiles)</onclick>
			<property name="path">ActivateWindow(profiles)</property>
			<property name="list">profiles</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include />
	<include name="skinshortcuts-submenu-1">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>Widget</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">widget</property>
			<property name="defaultID">widget</property>
			<visible>[False] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">2</property>
			<label>Widget</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">widget</property>
			<property name="defaultID">widget</property>
			<visible>[False] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">4</property>
			<label>Widget</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">widget</property>
			<property name="defaultID">widget</property>
			<property name="widget">playlist</property>
			<property name="widgetName">$LOCALIZE[31056]</property>
			<property name="widgetType">albums</property>
			<property name="widgetPath">special://skin/extras/playlists/random_albums.xsp</property>
			<property name="widgetTarget">music</property>
			<onclick>noop</onclick>
			<property name="path">noop</property>
			<property name="list">noop</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<property name="group">music.1</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">6</property>
			<label>Widget</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">widget</property>
			<property name="defaultID">widget</property>
			<property name="widget">GameWidget</property>
			<property name="widgetName">$LOCALIZE[35049]</property>
			<property name="widgetType">custom</property>
			<property name="widgetPath">addons://sources/game/</property>
			<onclick>noop</onclick>
			<property name="path">noop</property>
			<property name="list">noop</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-15016)</visible>
			<property name="group">15016.1</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">9</property>
			<label>Widget</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">widget</property>
			<property name="defaultID">widget</property>
			<visible>[False] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),weather)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">10</property>
			<label>Widget</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">widget</property>
			<property name="defaultID">widget</property>
			<visible>[False] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),programs)</visible>
			<onclick>noop</onclick>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>Widget</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">widget</property>
			<property name="defaultID">widget</property>
			<property name="widget">pvr</property>
			<property name="widgetName">$LOCALIZE[19217]</property>
			<property name="widgetType">pvr</property>
			<property name="widgetPath">pvr://channels/tv/*/</property>
			<property name="widgetTarget">videos</property>
			<onclick>noop</onclick>
			<property name="path">noop</property>
			<property name="list">noop</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<property name="group">14204.1</property>
			<property name="isSubmenu">True</property>
			</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">13</property>
			<label>Widget</label>
			<label2 />
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">widget</property>
			<property name="defaultID">widget</property>
			<property name="widget">pvr</property>
			<property name="widgetName">$LOCALIZE[19216]</property>
			<property name="widgetType">pvr</property>
			<property name="widgetPath">pvr://channels/radio/*/</property>
			<property name="widgetTarget">videos</property>
			<onclick>noop</onclick>
			<property name="path">noop</property>
			<property name="list">noop</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<property name="group">19021.1</property>
			<property name="isSubmenu">True</property>
			</item>
		</include>
	<include name="skinshortcuts-template-widgetControl">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-widgetControl-Master user</include>
		</include>
	<include name="skinshortcuts-template-widgetControl-Master user">
		<control type="list" id="10001">
			<left>1300</left>
			<top>-10000</top>
			<width>100</width>
			<height>300</height>
			<scrolltime>200</scrolltime>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<defaultcontrol>1</defaultcontrol>
			<itemlayout width="100" height="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<textcolor>$VAR[TextColor2]</textcolor>
					<label>$INFO[ListItem.Label]</label>
					</control>
				</itemlayout>
			<focusedlayout width="100" height="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<label>$INFO[ListItem.Label]</label>
					</control>
				</focusedlayout>
			<content>
				<item id="1">
					<label />
					<visible>Integer.IsGreater(Container(10101).NumItems,0) | Container(10101).IsUpdating</visible>
					<property name="widgetID">1-1</property>
					<property name="widgetContainer">10101</property>
					</item>
				</content>
			</control>
		<control type="button" id="9005">
			<description>Select previous widget</description>
			<left>500</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<label>Previous</label>
			<onfocus condition="String.IsEqual(Container(10001).ListItem(-1).Property(widgetID),1-1)">Control.SetFocus(10101)</onfocus>
			<onfocus>SetProperty(changeWidget-10001,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10001,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10001,-1)</onfocus>
			</control>
		<control type="button" id="9006">
			<description>Select current widget</description>
			<left>700</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<label>Current</label>
			<onfocus condition="String.IsEqual(Container(10001).ListItem.Property(widgetID),1-1)">Control.SetFocus(10101)</onfocus>
			<onfocus condition="Integer.IsEqual(Container(10001).NumItems,0)">Control.SetFocus(9000)</onfocus>
			</control>
		<control type="button" id="9007">
			<description>Select next widget</description>
			<left>900</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<label>Next</label>
			<onfocus condition="String.IsEqual(Container(10001).ListItem(1).Property(widgetID),1-1)">Control.SetFocus(10101)</onfocus>
			<onfocus>SetProperty(changeWidget-10001,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10001,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10001,1)</onfocus>
			</control>
		<control type="group">
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<include content="widgetHeading">
				<param name="container">10001</param>
				</include>
			</control>
		<control type="list" id="10002">
			<left>1300</left>
			<top>-10000</top>
			<width>100</width>
			<height>300</height>
			<scrolltime>200</scrolltime>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<defaultcontrol>1</defaultcontrol>
			<itemlayout width="100" height="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<textcolor>$VAR[TextColor2]</textcolor>
					<label>$INFO[ListItem.Label]</label>
					</control>
				</itemlayout>
			<focusedlayout width="100" height="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<label>$INFO[ListItem.Label]</label>
					</control>
				</focusedlayout>
			<content>
				<item id="1">
					<label />
					<visible>Integer.IsGreater(Container(10201).NumItems,0) | Container(10201).IsUpdating</visible>
					<property name="widgetID">2-1</property>
					<property name="widgetContainer">10201</property>
					</item>
				</content>
			</control>
		<control type="button" id="9005">
			<description>Select previous widget</description>
			<left>500</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<label>Previous</label>
			<onfocus condition="String.IsEqual(Container(10002).ListItem(-1).Property(widgetID),2-1)">Control.SetFocus(10201)</onfocus>
			<onfocus>SetProperty(changeWidget-10002,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10002,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10002,-1)</onfocus>
			</control>
		<control type="button" id="9006">
			<description>Select current widget</description>
			<left>700</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<label>Current</label>
			<onfocus condition="String.IsEqual(Container(10002).ListItem.Property(widgetID),2-1)">Control.SetFocus(10201)</onfocus>
			<onfocus condition="Integer.IsEqual(Container(10002).NumItems,0)">Control.SetFocus(9000)</onfocus>
			</control>
		<control type="button" id="9007">
			<description>Select next widget</description>
			<left>900</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<label>Next</label>
			<onfocus condition="String.IsEqual(Container(10002).ListItem(1).Property(widgetID),2-1)">Control.SetFocus(10201)</onfocus>
			<onfocus>SetProperty(changeWidget-10002,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10002,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10002,1)</onfocus>
			</control>
		<control type="group">
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<include content="widgetHeading">
				<param name="container">10002</param>
				</include>
			</control>
		<control type="list" id="10004">
			<left>1300</left>
			<top>-10000</top>
			<width>100</width>
			<height>300</height>
			<scrolltime>200</scrolltime>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<defaultcontrol>1</defaultcontrol>
			<itemlayout width="100" height="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<textcolor>$VAR[TextColor2]</textcolor>
					<label>$INFO[ListItem.Label]</label>
					</control>
				</itemlayout>
			<focusedlayout width="100" height="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<label>$INFO[ListItem.Label]</label>
					</control>
				</focusedlayout>
			<content>
				<item id="1">
					<label>$LOCALIZE[31056]</label>
					<visible>Integer.IsGreater(Container(10401).NumItems,0) | Container(10401).IsUpdating</visible>
					<property name="widgetID">4-1</property>
					<property name="widgetContainer">10401</property>
					</item>
				</content>
			</control>
		<control type="button" id="9005">
			<description>Select previous widget</description>
			<left>500</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<label>Previous</label>
			<onfocus condition="String.IsEqual(Container(10004).ListItem(-1).Property(widgetID),4-1)">Control.SetFocus(10401)</onfocus>
			<onfocus>SetProperty(changeWidget-10004,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10004,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10004,-1)</onfocus>
			</control>
		<control type="button" id="9006">
			<description>Select current widget</description>
			<left>700</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<label>Current</label>
			<onfocus condition="String.IsEqual(Container(10004).ListItem.Property(widgetID),4-1)">Control.SetFocus(10401)</onfocus>
			<onfocus condition="Integer.IsEqual(Container(10004).NumItems,0)">Control.SetFocus(9000)</onfocus>
			</control>
		<control type="button" id="9007">
			<description>Select next widget</description>
			<left>900</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<label>Next</label>
			<onfocus condition="String.IsEqual(Container(10004).ListItem(1).Property(widgetID),4-1)">Control.SetFocus(10401)</onfocus>
			<onfocus>SetProperty(changeWidget-10004,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10004,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10004,1)</onfocus>
			</control>
		<control type="group">
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<include content="widgetHeading">
				<param name="container">10004</param>
				</include>
			</control>
		<control type="list" id="10006">
			<left>1300</left>
			<top>-10000</top>
			<width>100</width>
			<height>300</height>
			<scrolltime>200</scrolltime>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-15016)</visible>
			<defaultcontrol>1</defaultcontrol>
			<itemlayout width="100" height="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<textcolor>$VAR[TextColor2]</textcolor>
					<label>$INFO[ListItem.Label]</label>
					</control>
				</itemlayout>
			<focusedlayout width="100" height="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<label>$INFO[ListItem.Label]</label>
					</control>
				</focusedlayout>
			<content>
				<item id="1">
					<label>$LOCALIZE[35049]</label>
					<visible>Integer.IsGreater(Container(10601).NumItems,0) | Container(10601).IsUpdating</visible>
					<property name="widgetID">6-1</property>
					<property name="widgetContainer">10601</property>
					</item>
				</content>
			</control>
		<control type="button" id="9005">
			<description>Select previous widget</description>
			<left>500</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-15016)</visible>
			<label>Previous</label>
			<onfocus condition="String.IsEqual(Container(10006).ListItem(-1).Property(widgetID),6-1)">Control.SetFocus(10601)</onfocus>
			<onfocus>SetProperty(changeWidget-10006,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10006,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10006,-1)</onfocus>
			</control>
		<control type="button" id="9006">
			<description>Select current widget</description>
			<left>700</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-15016)</visible>
			<label>Current</label>
			<onfocus condition="String.IsEqual(Container(10006).ListItem.Property(widgetID),6-1)">Control.SetFocus(10601)</onfocus>
			<onfocus condition="Integer.IsEqual(Container(10006).NumItems,0)">Control.SetFocus(9000)</onfocus>
			</control>
		<control type="button" id="9007">
			<description>Select next widget</description>
			<left>900</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-15016)</visible>
			<label>Next</label>
			<onfocus condition="String.IsEqual(Container(10006).ListItem(1).Property(widgetID),6-1)">Control.SetFocus(10601)</onfocus>
			<onfocus>SetProperty(changeWidget-10006,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10006,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10006,1)</onfocus>
			</control>
		<control type="group">
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-15016)</visible>
			<include content="widgetHeading">
				<param name="container">10006</param>
				</include>
			</control>
		<control type="list" id="10009">
			<left>1300</left>
			<top>-10000</top>
			<width>100</width>
			<height>300</height>
			<scrolltime>200</scrolltime>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),weather)</visible>
			<defaultcontrol>1</defaultcontrol>
			<itemlayout width="100" height="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<textcolor>$VAR[TextColor2]</textcolor>
					<label>$INFO[ListItem.Label]</label>
					</control>
				</itemlayout>
			<focusedlayout width="100" height="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<label>$INFO[ListItem.Label]</label>
					</control>
				</focusedlayout>
			<content>
				<item id="1">
					<label />
					<visible>Integer.IsGreater(Container(10901).NumItems,0) | Container(10901).IsUpdating</visible>
					<property name="widgetID">9-1</property>
					<property name="widgetContainer">10901</property>
					</item>
				</content>
			</control>
		<control type="button" id="9005">
			<description>Select previous widget</description>
			<left>500</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),weather)</visible>
			<label>Previous</label>
			<onfocus condition="String.IsEqual(Container(10009).ListItem(-1).Property(widgetID),9-1)">Control.SetFocus(10901)</onfocus>
			<onfocus>SetProperty(changeWidget-10009,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10009,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10009,-1)</onfocus>
			</control>
		<control type="button" id="9006">
			<description>Select current widget</description>
			<left>700</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),weather)</visible>
			<label>Current</label>
			<onfocus condition="String.IsEqual(Container(10009).ListItem.Property(widgetID),9-1)">Control.SetFocus(10901)</onfocus>
			<onfocus condition="Integer.IsEqual(Container(10009).NumItems,0)">Control.SetFocus(9000)</onfocus>
			</control>
		<control type="button" id="9007">
			<description>Select next widget</description>
			<left>900</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),weather)</visible>
			<label>Next</label>
			<onfocus condition="String.IsEqual(Container(10009).ListItem(1).Property(widgetID),9-1)">Control.SetFocus(10901)</onfocus>
			<onfocus>SetProperty(changeWidget-10009,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-10009,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(10009,1)</onfocus>
			</control>
		<control type="group">
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),weather)</visible>
			<include content="widgetHeading">
				<param name="container">10009</param>
				</include>
			</control>
		<control type="list" id="100010">
			<left>1300</left>
			<top>-10000</top>
			<width>100</width>
			<height>300</height>
			<scrolltime>200</scrolltime>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),programs)</visible>
			<defaultcontrol>1</defaultcontrol>
			<itemlayout width="100" height="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<textcolor>$VAR[TextColor2]</textcolor>
					<label>$INFO[ListItem.Label]</label>
					</control>
				</itemlayout>
			<focusedlayout width="100" height="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<label>$INFO[ListItem.Label]</label>
					</control>
				</focusedlayout>
			<content>
				<item id="1">
					<label />
					<visible>Integer.IsGreater(Container(101001).NumItems,0) | Container(101001).IsUpdating</visible>
					<property name="widgetID">10-1</property>
					<property name="widgetContainer">101001</property>
					</item>
				</content>
			</control>
		<control type="button" id="9005">
			<description>Select previous widget</description>
			<left>500</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),programs)</visible>
			<label>Previous</label>
			<onfocus condition="String.IsEqual(Container(100010).ListItem(-1).Property(widgetID),10-1)">Control.SetFocus(101001)</onfocus>
			<onfocus>SetProperty(changeWidget-100010,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-100010,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(100010,-1)</onfocus>
			</control>
		<control type="button" id="9006">
			<description>Select current widget</description>
			<left>700</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),programs)</visible>
			<label>Current</label>
			<onfocus condition="String.IsEqual(Container(100010).ListItem.Property(widgetID),10-1)">Control.SetFocus(101001)</onfocus>
			<onfocus condition="Integer.IsEqual(Container(100010).NumItems,0)">Control.SetFocus(9000)</onfocus>
			</control>
		<control type="button" id="9007">
			<description>Select next widget</description>
			<left>900</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),programs)</visible>
			<label>Next</label>
			<onfocus condition="String.IsEqual(Container(100010).ListItem(1).Property(widgetID),10-1)">Control.SetFocus(101001)</onfocus>
			<onfocus>SetProperty(changeWidget-100010,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-100010,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(100010,1)</onfocus>
			</control>
		<control type="group">
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),programs)</visible>
			<include content="widgetHeading">
				<param name="container">100010</param>
				</include>
			</control>
		<control type="list" id="100011">
			<left>1300</left>
			<top>-10000</top>
			<width>100</width>
			<height>300</height>
			<scrolltime>200</scrolltime>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<defaultcontrol>1</defaultcontrol>
			<itemlayout width="100" height="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<textcolor>$VAR[TextColor2]</textcolor>
					<label>$INFO[ListItem.Label]</label>
					</control>
				</itemlayout>
			<focusedlayout width="100" height="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<label>$INFO[ListItem.Label]</label>
					</control>
				</focusedlayout>
			<content>
				<item id="1">
					<label>$LOCALIZE[19217]</label>
					<visible>Integer.IsGreater(Container(101101).NumItems,0) | Container(101101).IsUpdating</visible>
					<property name="widgetID">11-1</property>
					<property name="widgetContainer">101101</property>
					</item>
				</content>
			</control>
		<control type="button" id="9005">
			<description>Select previous widget</description>
			<left>500</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<label>Previous</label>
			<onfocus condition="String.IsEqual(Container(100011).ListItem(-1).Property(widgetID),11-1)">Control.SetFocus(101101)</onfocus>
			<onfocus>SetProperty(changeWidget-100011,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-100011,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(100011,-1)</onfocus>
			</control>
		<control type="button" id="9006">
			<description>Select current widget</description>
			<left>700</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<label>Current</label>
			<onfocus condition="String.IsEqual(Container(100011).ListItem.Property(widgetID),11-1)">Control.SetFocus(101101)</onfocus>
			<onfocus condition="Integer.IsEqual(Container(100011).NumItems,0)">Control.SetFocus(9000)</onfocus>
			</control>
		<control type="button" id="9007">
			<description>Select next widget</description>
			<left>900</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<label>Next</label>
			<onfocus condition="String.IsEqual(Container(100011).ListItem(1).Property(widgetID),11-1)">Control.SetFocus(101101)</onfocus>
			<onfocus>SetProperty(changeWidget-100011,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-100011,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(100011,1)</onfocus>
			</control>
		<control type="group">
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<include content="widgetHeading">
				<param name="container">100011</param>
				</include>
			</control>
		<control type="list" id="100013">
			<left>1300</left>
			<top>-10000</top>
			<width>100</width>
			<height>300</height>
			<scrolltime>200</scrolltime>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<defaultcontrol>1</defaultcontrol>
			<itemlayout width="100" height="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<textcolor>$VAR[TextColor2]</textcolor>
					<label>$INFO[ListItem.Label]</label>
					</control>
				</itemlayout>
			<focusedlayout width="100" height="100">
				<control type="label">
					<width>100</width>
					<height>100</height>
					<label>$INFO[ListItem.Label]</label>
					</control>
				</focusedlayout>
			<content>
				<item id="1">
					<label>$LOCALIZE[19216]</label>
					<visible>Integer.IsGreater(Container(101301).NumItems,0) | Container(101301).IsUpdating</visible>
					<property name="widgetID">13-1</property>
					<property name="widgetContainer">101301</property>
					</item>
				</content>
			</control>
		<control type="button" id="9005">
			<description>Select previous widget</description>
			<left>500</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<label>Previous</label>
			<onfocus condition="String.IsEqual(Container(100013).ListItem(-1).Property(widgetID),13-1)">Control.SetFocus(101301)</onfocus>
			<onfocus>SetProperty(changeWidget-100013,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-100013,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(100013,-1)</onfocus>
			</control>
		<control type="button" id="9006">
			<description>Select current widget</description>
			<left>700</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<label>Current</label>
			<onfocus condition="String.IsEqual(Container(100013).ListItem.Property(widgetID),13-1)">Control.SetFocus(101301)</onfocus>
			<onfocus condition="Integer.IsEqual(Container(100013).NumItems,0)">Control.SetFocus(9000)</onfocus>
			</control>
		<control type="button" id="9007">
			<description>Select next widget</description>
			<left>900</left>
			<top>-10000</top>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<label>Next</label>
			<onfocus condition="String.IsEqual(Container(100013).ListItem(1).Property(widgetID),13-1)">Control.SetFocus(101301)</onfocus>
			<onfocus>SetProperty(changeWidget-100013,True,10000)</onfocus>
			<onfocus>AlarmClock(changeWidgetTimer,SetProperty(changeWidget-100013,False,10000),00:03,silent)</onfocus>
			<onfocus>Control.Move(100013,1)</onfocus>
			</control>
		<control type="group">
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<include content="widgetHeading">
				<param name="container">100013</param>
				</include>
			</control>
		</include>
	<include name="skinshortcuts-template-reloading">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-reloading-Master user</include>
		</include>
	<include name="skinshortcuts-template-reloading-Master user">
		<control type="image">
			<width>36</width>
			<height>36</height>
			<texture>busy.gif</texture>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),movies)</visible>
			<visible>String.IsEqual(Container(10001).ListItem.Property(widgetID),1-1) + Container(10101).IsUpdating</visible>
			</control>
		<control type="image">
			<width>36</width>
			<height>36</height>
			<texture>busy.gif</texture>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),tvshows)</visible>
			<visible>String.IsEqual(Container(10002).ListItem.Property(widgetID),2-1) + Container(10201).IsUpdating</visible>
			</control>
		<control type="image">
			<width>36</width>
			<height>36</height>
			<texture>busy.gif</texture>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),music)</visible>
			<visible>String.IsEqual(Container(10004).ListItem.Property(widgetID),4-1) + Container(10401).IsUpdating</visible>
			</control>
		<control type="image">
			<width>36</width>
			<height>36</height>
			<texture>busy.gif</texture>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-15016)</visible>
			<visible>String.IsEqual(Container(10006).ListItem.Property(widgetID),6-1) + Container(10601).IsUpdating</visible>
			</control>
		<control type="image">
			<width>36</width>
			<height>36</height>
			<texture>busy.gif</texture>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),weather)</visible>
			<visible>String.IsEqual(Container(10009).ListItem.Property(widgetID),9-1) + Container(10901).IsUpdating</visible>
			</control>
		<control type="image">
			<width>36</width>
			<height>36</height>
			<texture>busy.gif</texture>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),programs)</visible>
			<visible>String.IsEqual(Container(100010).ListItem.Property(widgetID),10-1) + Container(101001).IsUpdating</visible>
			</control>
		<control type="image">
			<width>36</width>
			<height>36</height>
			<texture>busy.gif</texture>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-14204)</visible>
			<visible>String.IsEqual(Container(100011).ListItem.Property(widgetID),11-1) + Container(101101).IsUpdating</visible>
			</control>
		<control type="image">
			<width>36</width>
			<height>36</height>
			<texture>busy.gif</texture>
			<visible>String.IsEqual(Container(9000).ListItem.Property(submenuVisibility),num-19021)</visible>
			<visible>String.IsEqual(Container(100013).ListItem.Property(widgetID),13-1) + Container(101301).IsUpdating</visible>
			</control>
		</include>
	<include name="skinshortcuts-template-widgetDetails">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-widgetDetails-Master user</include>
		</include>
	<include name="skinshortcuts-template-widgetDetails-Master user" />
	<include name="skinshortcuts-template-vertical">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-vertical-Master user</include>
		</include>
	<include name="skinshortcuts-template-vertical-Master user">
		<control type="list" id="10401">
			<viewtype label="">list</viewtype>
			<orientation>horizontal</orientation>
			<defaultcontrol always="true">0</defaultcontrol>
			<scrolltime tween="sine" easing="out">240</scrolltime>
			<include condition="True">widgetLayout-tall</include>
			<include condition="False">widgetLayout-wide</include>
			<include content="widgetOnControl">
				<param name="container">10004</param>
				</include>
			<include condition="True" content="widgetLayoutSlide-tall">
				<param name="container">10401</param>
				</include>
			<include condition="False" content="widgetLayoutSlide-wide">
				<param name="container">10401</param>
				</include>
			<include content="widgetAnimation">
				<param name="container1">10004</param>
				<param name="container2">4-1</param>
				</include>
			<itemlayout width="203" height="326">
				<include content="widget-image">
					<description>Primary art</description>
					<param name="left">10.0</param>
					<param name="bottom">0</param>
					<param name="width">183</param>
					<param name="height">306</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultMusicAlbums.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">![IsEmpty(ListItem.Icon)]</param>
					</include>
				<include content="widget-image">
					<description>Fallback art</description>
					<param name="left">10.0</param>
					<param name="bottom">0</param>
					<param name="width">183</param>
					<param name="height">306</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultMusicAlbums.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">IsEmpty(ListItem.Icon)</param>
					</include>
				<include content="widget-image">
					<description>Catch-all art</description>
					<param name="left">10.0</param>
					<param name="bottom">0</param>
					<param name="width">183</param>
					<param name="height">306</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultMusicAlbums.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">[ IsEmpty(ListItem.Icon) ] + [ IsEmpty(ListItem.Icon) ]</param>
					</include>
				<control type="group">
					<right>10.0</right>
					<bottom>0</bottom>
					<width>40.26</width>
					<height>40.26</height>
					<control type="image">
						<texture background="true">views/OverlayCornerRight.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
						</control>
					<control type="image">
						<texture background="true">$VAR[StatusOverlayWide]</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
					</control>
				</itemlayout>
			<focusedlayout width="203" height="326">
				<control type="group">
					<animation effect="zoom" start="90.14778325123153" end="100" center="101.5,326" time="300" tween="back" easing="out" reversible="false">Focus</animation>
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">0</param>
						<param name="bottom">0</param>
						<param name="width">203</param>
						<param name="height">326</param>
						<param name="fallback">DefaultMusicAlbums.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![IsEmpty(ListItem.Icon)]</param>
						</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">0</param>
						<param name="bottom">0</param>
						<param name="width">203</param>
						<param name="height">326</param>
						<param name="fallback">DefaultMusicAlbums.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">IsEmpty(ListItem.Icon)</param>
						</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">0</param>
						<param name="bottom">0</param>
						<param name="width">203</param>
						<param name="height">326</param>
						<param name="fallback">DefaultMusicAlbums.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ IsEmpty(ListItem.Icon) ] + [ IsEmpty(ListItem.Icon) ]</param>
						</include>
					<control type="group">
						<right>0</right>
						<bottom>0</bottom>
						<width>44.660000000000004</width>
						<height>44.660000000000004</height>
						<control type="image">
							<texture background="true">views/OverlayCornerRight.png</texture>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							</control>
						<control type="image">
							<texture background="true">$VAR[StatusOverlayWide]</texture>
							</control>
						</control>
					<visible>Control.HasFocus(10401)</visible>
					</control>
				<control type="group">
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">10.0</param>
						<param name="bottom">0</param>
						<param name="width">183</param>
						<param name="height">306</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultMusicAlbums.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![IsEmpty(ListItem.Icon)]</param>
						</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">10.0</param>
						<param name="bottom">0</param>
						<param name="width">183</param>
						<param name="height">306</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultMusicAlbums.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">IsEmpty(ListItem.Icon)</param>
						</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">10.0</param>
						<param name="bottom">0</param>
						<param name="width">183</param>
						<param name="height">306</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultMusicAlbums.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ IsEmpty(ListItem.Icon) ] + [ IsEmpty(ListItem.Icon) ]</param>
						</include>
					<control type="group">
						<right>10.0</right>
						<bottom>0</bottom>
						<width>40.26</width>
						<height>40.26</height>
						<control type="image">
							<texture background="true">views/OverlayCornerRight.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							</control>
						<control type="image">
							<texture background="true">$VAR[StatusOverlayWide]</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
							</control>
						</control>
					<visible>!Control.HasFocus(10401)</visible>
					</control>
				</focusedlayout>
			<content target="music">special://skin/extras/playlists/random_albums.xsp</content>
			</control>
		<control type="list" id="10601">
			<viewtype label="">list</viewtype>
			<orientation>horizontal</orientation>
			<defaultcontrol always="true">0</defaultcontrol>
			<scrolltime tween="sine" easing="out">240</scrolltime>
			<include condition="True">widgetLayout-tall</include>
			<include condition="False">widgetLayout-wide</include>
			<include content="widgetOnControl">
				<param name="container">10006</param>
				</include>
			<include condition="True" content="widgetLayoutSlide-tall">
				<param name="container">10601</param>
				</include>
			<include condition="False" content="widgetLayoutSlide-wide">
				<param name="container">10601</param>
				</include>
			<include content="widgetAnimation">
				<param name="container1">10006</param>
				<param name="container2">6-1</param>
				</include>
			<itemlayout width="203" height="326">
				<include content="widget-image">
					<description>Primary art</description>
					<param name="left">10.0</param>
					<param name="bottom">0</param>
					<param name="width">183</param>
					<param name="height">306</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultShortcut.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">![IsEmpty(ListItem.Icon)]</param>
					</include>
				<include content="widget-image">
					<description>Fallback art</description>
					<param name="left">10.0</param>
					<param name="bottom">0</param>
					<param name="width">183</param>
					<param name="height">306</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultShortcut.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">IsEmpty(ListItem.Icon)</param>
					</include>
				<include content="widget-image">
					<description>Catch-all art</description>
					<param name="left">10.0</param>
					<param name="bottom">0</param>
					<param name="width">183</param>
					<param name="height">306</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultShortcut.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">[ IsEmpty(ListItem.Icon) ] + [ IsEmpty(ListItem.Icon) ]</param>
					</include>
				<control type="group">
					<right>10.0</right>
					<bottom>0</bottom>
					<width>40.26</width>
					<height>40.26</height>
					<control type="image">
						<texture background="true">views/OverlayCornerRight.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
						</control>
					<control type="image">
						<texture background="true">$VAR[StatusOverlayWide]</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
					</control>
				</itemlayout>
			<focusedlayout width="203" height="326">
				<control type="group">
					<animation effect="zoom" start="90.14778325123153" end="100" center="101.5,326" time="300" tween="back" easing="out" reversible="false">Focus</animation>
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">0</param>
						<param name="bottom">0</param>
						<param name="width">203</param>
						<param name="height">326</param>
						<param name="fallback">DefaultShortcut.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![IsEmpty(ListItem.Icon)]</param>
						</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">0</param>
						<param name="bottom">0</param>
						<param name="width">203</param>
						<param name="height">326</param>
						<param name="fallback">DefaultShortcut.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">IsEmpty(ListItem.Icon)</param>
						</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">0</param>
						<param name="bottom">0</param>
						<param name="width">203</param>
						<param name="height">326</param>
						<param name="fallback">DefaultShortcut.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ IsEmpty(ListItem.Icon) ] + [ IsEmpty(ListItem.Icon) ]</param>
						</include>
					<control type="group">
						<right>0</right>
						<bottom>0</bottom>
						<width>44.660000000000004</width>
						<height>44.660000000000004</height>
						<control type="image">
							<texture background="true">views/OverlayCornerRight.png</texture>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							</control>
						<control type="image">
							<texture background="true">$VAR[StatusOverlayWide]</texture>
							</control>
						</control>
					<visible>Control.HasFocus(10601)</visible>
					</control>
				<control type="group">
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">10.0</param>
						<param name="bottom">0</param>
						<param name="width">183</param>
						<param name="height">306</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultShortcut.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![IsEmpty(ListItem.Icon)]</param>
						</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">10.0</param>
						<param name="bottom">0</param>
						<param name="width">183</param>
						<param name="height">306</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultShortcut.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">IsEmpty(ListItem.Icon)</param>
						</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">10.0</param>
						<param name="bottom">0</param>
						<param name="width">183</param>
						<param name="height">306</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultShortcut.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ IsEmpty(ListItem.Icon) ] + [ IsEmpty(ListItem.Icon) ]</param>
						</include>
					<control type="group">
						<right>10.0</right>
						<bottom>0</bottom>
						<width>40.26</width>
						<height>40.26</height>
						<control type="image">
							<texture background="true">views/OverlayCornerRight.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							</control>
						<control type="image">
							<texture background="true">$VAR[StatusOverlayWide]</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
							</control>
						</control>
					<visible>!Control.HasFocus(10601)</visible>
					</control>
				</focusedlayout>
			<content target="">addons://sources/game/</content>
			</control>
		<control type="list" id="101101">
			<viewtype label="">list</viewtype>
			<orientation>horizontal</orientation>
			<defaultcontrol always="true">0</defaultcontrol>
			<scrolltime tween="sine" easing="out">240</scrolltime>
			<include condition="True">widgetLayout-tall</include>
			<include condition="False">widgetLayout-wide</include>
			<include content="widgetOnControl">
				<param name="container">100011</param>
				</include>
			<include condition="True" content="widgetLayoutSlide-tall">
				<param name="container">101101</param>
				</include>
			<include condition="False" content="widgetLayoutSlide-wide">
				<param name="container">101101</param>
				</include>
			<include content="widgetAnimation">
				<param name="container1">100011</param>
				<param name="container2">11-1</param>
				</include>
			<itemlayout width="203" height="326">
				<include content="widget-image">
					<description>Primary art</description>
					<param name="left">10.0</param>
					<param name="bottom">0</param>
					<param name="width">183</param>
					<param name="height">306</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultLiveTV.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">![IsEmpty(ListItem.Icon)]</param>
					</include>
				<include content="widget-image">
					<description>Fallback art</description>
					<param name="left">10.0</param>
					<param name="bottom">0</param>
					<param name="width">183</param>
					<param name="height">306</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultLiveTV.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">IsEmpty(ListItem.Icon)</param>
					</include>
				<include content="widget-image">
					<description>Catch-all art</description>
					<param name="left">10.0</param>
					<param name="bottom">0</param>
					<param name="width">183</param>
					<param name="height">306</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultLiveTV.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">[ IsEmpty(ListItem.Icon) ] + [ IsEmpty(ListItem.Icon) ]</param>
					</include>
				<control type="group">
					<right>10.0</right>
					<bottom>0</bottom>
					<width>40.26</width>
					<height>40.26</height>
					<control type="image">
						<texture background="true">views/OverlayCornerRight.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
						</control>
					<control type="image">
						<texture background="true">$VAR[StatusOverlayWide]</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
					</control>
				</itemlayout>
			<focusedlayout width="203" height="326">
				<control type="group">
					<animation effect="zoom" start="90.14778325123153" end="100" center="101.5,326" time="300" tween="back" easing="out" reversible="false">Focus</animation>
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">0</param>
						<param name="bottom">0</param>
						<param name="width">203</param>
						<param name="height">326</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![IsEmpty(ListItem.Icon)]</param>
						</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">0</param>
						<param name="bottom">0</param>
						<param name="width">203</param>
						<param name="height">326</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">IsEmpty(ListItem.Icon)</param>
						</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">0</param>
						<param name="bottom">0</param>
						<param name="width">203</param>
						<param name="height">326</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ IsEmpty(ListItem.Icon) ] + [ IsEmpty(ListItem.Icon) ]</param>
						</include>
					<control type="group">
						<right>0</right>
						<bottom>0</bottom>
						<width>44.660000000000004</width>
						<height>44.660000000000004</height>
						<control type="image">
							<texture background="true">views/OverlayCornerRight.png</texture>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							</control>
						<control type="image">
							<texture background="true">$VAR[StatusOverlayWide]</texture>
							</control>
						</control>
					<visible>Control.HasFocus(101101)</visible>
					</control>
				<control type="group">
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">10.0</param>
						<param name="bottom">0</param>
						<param name="width">183</param>
						<param name="height">306</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![IsEmpty(ListItem.Icon)]</param>
						</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">10.0</param>
						<param name="bottom">0</param>
						<param name="width">183</param>
						<param name="height">306</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">IsEmpty(ListItem.Icon)</param>
						</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">10.0</param>
						<param name="bottom">0</param>
						<param name="width">183</param>
						<param name="height">306</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ IsEmpty(ListItem.Icon) ] + [ IsEmpty(ListItem.Icon) ]</param>
						</include>
					<control type="group">
						<right>10.0</right>
						<bottom>0</bottom>
						<width>40.26</width>
						<height>40.26</height>
						<control type="image">
							<texture background="true">views/OverlayCornerRight.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							</control>
						<control type="image">
							<texture background="true">$VAR[StatusOverlayWide]</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
							</control>
						</control>
					<visible>!Control.HasFocus(101101)</visible>
					</control>
				</focusedlayout>
			<content target="videos">pvr://channels/tv/*/</content>
			</control>
		<control type="list" id="101301">
			<viewtype label="">list</viewtype>
			<orientation>horizontal</orientation>
			<defaultcontrol always="true">0</defaultcontrol>
			<scrolltime tween="sine" easing="out">240</scrolltime>
			<include condition="True">widgetLayout-tall</include>
			<include condition="False">widgetLayout-wide</include>
			<include content="widgetOnControl">
				<param name="container">100013</param>
				</include>
			<include condition="True" content="widgetLayoutSlide-tall">
				<param name="container">101301</param>
				</include>
			<include condition="False" content="widgetLayoutSlide-wide">
				<param name="container">101301</param>
				</include>
			<include content="widgetAnimation">
				<param name="container1">100013</param>
				<param name="container2">13-1</param>
				</include>
			<itemlayout width="203" height="326">
				<include content="widget-image">
					<description>Primary art</description>
					<param name="left">10.0</param>
					<param name="bottom">0</param>
					<param name="width">183</param>
					<param name="height">306</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultLiveTV.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">![IsEmpty(ListItem.Icon)]</param>
					</include>
				<include content="widget-image">
					<description>Fallback art</description>
					<param name="left">10.0</param>
					<param name="bottom">0</param>
					<param name="width">183</param>
					<param name="height">306</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultLiveTV.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">IsEmpty(ListItem.Icon)</param>
					</include>
				<include content="widget-image">
					<description>Catch-all art</description>
					<param name="left">10.0</param>
					<param name="bottom">0</param>
					<param name="width">183</param>
					<param name="height">306</param>
					<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
					<param name="fallback">DefaultLiveTV.png</param>
					<param name="art">$INFO[ListItem.Icon]</param>
					<param name="aspectratio">keep</param>
					<param name="shadow">noop</param>
					<param name="visible">[ IsEmpty(ListItem.Icon) ] + [ IsEmpty(ListItem.Icon) ]</param>
					</include>
				<control type="group">
					<right>10.0</right>
					<bottom>0</bottom>
					<width>40.26</width>
					<height>40.26</height>
					<control type="image">
						<texture background="true">views/OverlayCornerRight.png</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
						</control>
					<control type="image">
						<texture background="true">$VAR[StatusOverlayWide]</texture>
						<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
						</control>
					</control>
				</itemlayout>
			<focusedlayout width="203" height="326">
				<control type="group">
					<animation effect="zoom" start="90.14778325123153" end="100" center="101.5,326" time="300" tween="back" easing="out" reversible="false">Focus</animation>
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">0</param>
						<param name="bottom">0</param>
						<param name="width">203</param>
						<param name="height">326</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![IsEmpty(ListItem.Icon)]</param>
						</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">0</param>
						<param name="bottom">0</param>
						<param name="width">203</param>
						<param name="height">326</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">IsEmpty(ListItem.Icon)</param>
						</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">0</param>
						<param name="bottom">0</param>
						<param name="width">203</param>
						<param name="height">326</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ IsEmpty(ListItem.Icon) ] + [ IsEmpty(ListItem.Icon) ]</param>
						</include>
					<control type="group">
						<right>0</right>
						<bottom>0</bottom>
						<width>44.660000000000004</width>
						<height>44.660000000000004</height>
						<control type="image">
							<texture background="true">views/OverlayCornerRight.png</texture>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							</control>
						<control type="image">
							<texture background="true">$VAR[StatusOverlayWide]</texture>
							</control>
						</control>
					<visible>Control.HasFocus(101301)</visible>
					</control>
				<control type="group">
					<include content="widget-image">
						<description>Primary art</description>
						<param name="left">10.0</param>
						<param name="bottom">0</param>
						<param name="width">183</param>
						<param name="height">306</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">![IsEmpty(ListItem.Icon)]</param>
						</include>
					<include content="widget-image">
						<description>Fallback art</description>
						<param name="left">10.0</param>
						<param name="bottom">0</param>
						<param name="width">183</param>
						<param name="height">306</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">IsEmpty(ListItem.Icon)</param>
						</include>
					<include content="widget-image">
						<description>Catch-all art</description>
						<param name="left">10.0</param>
						<param name="bottom">0</param>
						<param name="width">183</param>
						<param name="height">306</param>
						<param name="colordiffuse">$VAR[DiffusePosterNF]</param>
						<param name="fallback">DefaultLiveTV.png</param>
						<param name="art">$INFO[ListItem.Icon]</param>
						<param name="aspectratio">keep</param>
						<param name="shadow">noop</param>
						<param name="visible">[ IsEmpty(ListItem.Icon) ] + [ IsEmpty(ListItem.Icon) ]</param>
						</include>
					<control type="group">
						<right>10.0</right>
						<bottom>0</bottom>
						<width>40.26</width>
						<height>40.26</height>
						<control type="image">
							<texture background="true">views/OverlayCornerRight.png</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
							<visible>[ListItem.IsFolder + Integer.IsGreater(ListItem.Property(WatchedEpisodes),0) + Integer.IsGreater(ListItem.Property(UnWatchedEpisodes),0)] | String.IsEqual(ListItem.Overlay,OverlayWatched.png) | ListItem.IsResumable | !String.IsEmpty(ListItem.PlayCount)</visible>
							</control>
						<control type="image">
							<texture background="true">$VAR[StatusOverlayWide]</texture>
							<colordiffuse>$VAR[DiffusePosterNF]</colordiffuse>
							</control>
						</control>
					<visible>!Control.HasFocus(101301)</visible>
					</control>
				</focusedlayout>
			<content target="videos">pvr://channels/radio/*/</content>
			</control>
		</include>
	<include name="skinshortcuts-template">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-Master user</include>
		<description>This include was built automatically as the template didn't match any menu items</description>
		</include>
	<include name="skinshortcuts-template-Master user">
		<description>This is a fake template which is needed to trick Skin Shortcuts into building the submenuOther templates</description>
		</include>
	<variable name="widgetDetails">
		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101) + Integer.IsEqual(Container(10101).NumItems,0)">$LOCALIZE[20186]...</value>
		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101) + False">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Window(Weather).Property(Location)][/LIGHT][CR]$INFO[Container(10101).ListItem.Property(outlook)][/COLOR]</value>
		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101) + !String.IsEmpty(Container(10101).ListItem.Property(WatchedEpisodes))">[COLOR $VAR[TextColor1]]$INFO[Container(10101).ListItem.TVShowTitle][CR][LIGHT]$LOCALIZE[16102] $INFO[Container(10101).ListItem.Property(WatchedEpisodes)] $LOCALIZE[20163] $INFO[Container(10101).ListItem.Property(NumEpisodes)] $LOCALIZE[20453][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101) + !String.IsEmpty(Container(10101).ListItem.Season) + !Integer.IsGreater(Container(10101).ListItem.Season,9) + !Integer.IsGreater(Container(10101).ListItem.Episode,9) + !String.Contains(Container(10101).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10101).ListItem.TVShowTitle][/LIGHT][CR]S0$INFO[Container(10101).ListItem.Season]E0$INFO[Container(10101).ListItem.Episode] • $INFO[Container(10101).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101) + !String.IsEmpty(Container(10101).ListItem.Season) + !Integer.IsGreater(Container(10101).ListItem.Season,9) + Integer.IsGreater(Container(10101).ListItem.Episode,9) + !String.Contains(Container(10101).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10101).ListItem.TVShowTitle][/LIGHT][CR]S0$INFO[Container(10101).ListItem.Season]E$INFO[Container(10101).ListItem.Episode] • $INFO[Container(10101).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101) + !String.IsEmpty(Container(10101).ListItem.Season) + Integer.IsGreater(Container(10101).ListItem.Season,9) + !Integer.IsGreater(Container(10101).ListItem.Episode,9) + !String.Contains(Container(10101).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10101).ListItem.TVShowTitle][/LIGHT][CR]S$INFO[Container(10101).ListItem.Season]E0$INFO[Container(10101).ListItem.Episode] • $INFO[Container(10101).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101) + !String.IsEmpty(Container(10101).ListItem.Season) + Integer.IsGreater(Container(10101).ListItem.Season,9) + Integer.IsGreater(Container(10101).ListItem.Episode,9) + !String.Contains(Container(10101).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10101).ListItem.TVShowTitle][/LIGHT][CR]S$INFO[Container(10101).ListItem.Season]E$INFO[Container(10101).ListItem.Episode] • $INFO[Container(10101).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101) + !String.IsEmpty(Container(10101).ListItem.Season) + String.Contains(Container(10101).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10101).ListItem.TVShowTitle][/LIGHT][CR]$INFO[Container(10101).ListItem.Episode,[UPPERCASE],[/UPPERCASE]] • $INFO[Container(10101).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101) + !IsEmpty(Container(10101).ListItem.ChannelName) + !IsEmpty(Container(10101).ListItem.StartTime) + !String.StartsWith(Container(10101).ListItem.Path,pvr://recordings/tv/) + [String.StartsWith(Container(10101).ListItem.Path,pvr://channels/) | String.StartsWith(Container(10101).ListItem.Path,pvr://timers/)]">[COLOR $VAR[TextColor1]]$INFO[Container(10101).ListItem.Label][CR][LIGHT]$INFO[Container(10101).ListItem.Title] ($INFO[Container(10101).ListItem.StartTime] - $INFO[Container(10101).ListItem.EndTime])[CR]$INFO[Container(10101).ListItem.NextTitle] ($INFO[Container(10101).ListItem.NextStartTime] - $INFO[Container(10101).ListItem.NextEndTime])[/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101) + !IsEmpty(Container(10101).ListItem.ChannelName) + !String.StartsWith(Container(10101).ListItem.Path,pvr://recordings/tv/) + [String.StartsWith(Container(10101).ListItem.Path,pvr://channels/) | String.StartsWith(Container(10101).ListItem.Path,pvr://timers/)]">[COLOR $VAR[TextColor1]]$INFO[Container(10101).ListItem.Label][CR][LIGHT]$LOCALIZE[19055][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101) + !IsEmpty(Container(10101).ListItem.StartTime) + String.StartsWith(Container(10101).ListItem.Path,pvr://recordings/tv/)">[COLOR $VAR[TextColor1]]$INFO[Container(10101).ListItem.Label][CR][LIGHT]$INFO[Container(10101).ListItem.StartDate]$INFO[Container(10101).ListItem.StartTime, - ,][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(10001) + Control.HasFocus(10101)">[COLOR $VAR[TextColor1]]$INFO[Container(10101).ListItem.Label][/COLOR]</value>
		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201) + Integer.IsEqual(Container(10201).NumItems,0)">$LOCALIZE[20186]...</value>
		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201) + False">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Window(Weather).Property(Location)][/LIGHT][CR]$INFO[Container(10201).ListItem.Property(outlook)][/COLOR]</value>
		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201) + !String.IsEmpty(Container(10201).ListItem.Property(WatchedEpisodes))">[COLOR $VAR[TextColor1]]$INFO[Container(10201).ListItem.TVShowTitle][CR][LIGHT]$LOCALIZE[16102] $INFO[Container(10201).ListItem.Property(WatchedEpisodes)] $LOCALIZE[20163] $INFO[Container(10201).ListItem.Property(NumEpisodes)] $LOCALIZE[20453][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201) + !String.IsEmpty(Container(10201).ListItem.Season) + !Integer.IsGreater(Container(10201).ListItem.Season,9) + !Integer.IsGreater(Container(10201).ListItem.Episode,9) + !String.Contains(Container(10201).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10201).ListItem.TVShowTitle][/LIGHT][CR]S0$INFO[Container(10201).ListItem.Season]E0$INFO[Container(10201).ListItem.Episode] • $INFO[Container(10201).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201) + !String.IsEmpty(Container(10201).ListItem.Season) + !Integer.IsGreater(Container(10201).ListItem.Season,9) + Integer.IsGreater(Container(10201).ListItem.Episode,9) + !String.Contains(Container(10201).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10201).ListItem.TVShowTitle][/LIGHT][CR]S0$INFO[Container(10201).ListItem.Season]E$INFO[Container(10201).ListItem.Episode] • $INFO[Container(10201).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201) + !String.IsEmpty(Container(10201).ListItem.Season) + Integer.IsGreater(Container(10201).ListItem.Season,9) + !Integer.IsGreater(Container(10201).ListItem.Episode,9) + !String.Contains(Container(10201).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10201).ListItem.TVShowTitle][/LIGHT][CR]S$INFO[Container(10201).ListItem.Season]E0$INFO[Container(10201).ListItem.Episode] • $INFO[Container(10201).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201) + !String.IsEmpty(Container(10201).ListItem.Season) + Integer.IsGreater(Container(10201).ListItem.Season,9) + Integer.IsGreater(Container(10201).ListItem.Episode,9) + !String.Contains(Container(10201).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10201).ListItem.TVShowTitle][/LIGHT][CR]S$INFO[Container(10201).ListItem.Season]E$INFO[Container(10201).ListItem.Episode] • $INFO[Container(10201).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201) + !String.IsEmpty(Container(10201).ListItem.Season) + String.Contains(Container(10201).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10201).ListItem.TVShowTitle][/LIGHT][CR]$INFO[Container(10201).ListItem.Episode,[UPPERCASE],[/UPPERCASE]] • $INFO[Container(10201).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201) + !IsEmpty(Container(10201).ListItem.ChannelName) + !IsEmpty(Container(10201).ListItem.StartTime) + !String.StartsWith(Container(10201).ListItem.Path,pvr://recordings/tv/) + [String.StartsWith(Container(10201).ListItem.Path,pvr://channels/) | String.StartsWith(Container(10201).ListItem.Path,pvr://timers/)]">[COLOR $VAR[TextColor1]]$INFO[Container(10201).ListItem.Label][CR][LIGHT]$INFO[Container(10201).ListItem.Title] ($INFO[Container(10201).ListItem.StartTime] - $INFO[Container(10201).ListItem.EndTime])[CR]$INFO[Container(10201).ListItem.NextTitle] ($INFO[Container(10201).ListItem.NextStartTime] - $INFO[Container(10201).ListItem.NextEndTime])[/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201) + !IsEmpty(Container(10201).ListItem.ChannelName) + !String.StartsWith(Container(10201).ListItem.Path,pvr://recordings/tv/) + [String.StartsWith(Container(10201).ListItem.Path,pvr://channels/) | String.StartsWith(Container(10201).ListItem.Path,pvr://timers/)]">[COLOR $VAR[TextColor1]]$INFO[Container(10201).ListItem.Label][CR][LIGHT]$LOCALIZE[19055][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201) + !IsEmpty(Container(10201).ListItem.StartTime) + String.StartsWith(Container(10201).ListItem.Path,pvr://recordings/tv/)">[COLOR $VAR[TextColor1]]$INFO[Container(10201).ListItem.Label][CR][LIGHT]$INFO[Container(10201).ListItem.StartDate]$INFO[Container(10201).ListItem.StartTime, - ,][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(10002) + Control.HasFocus(10201)">[COLOR $VAR[TextColor1]]$INFO[Container(10201).ListItem.Label][/COLOR]</value>
		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401) + Integer.IsEqual(Container(10401).NumItems,0)">$LOCALIZE[20186]...</value>
		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401) + False">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Window(Weather).Property(Location)][/LIGHT][CR]$INFO[Container(10401).ListItem.Property(outlook)][/COLOR]</value>
		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401) + !String.IsEmpty(Container(10401).ListItem.Property(WatchedEpisodes))">[COLOR $VAR[TextColor1]]$INFO[Container(10401).ListItem.TVShowTitle][CR][LIGHT]$LOCALIZE[16102] $INFO[Container(10401).ListItem.Property(WatchedEpisodes)] $LOCALIZE[20163] $INFO[Container(10401).ListItem.Property(NumEpisodes)] $LOCALIZE[20453][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401) + !String.IsEmpty(Container(10401).ListItem.Season) + !Integer.IsGreater(Container(10401).ListItem.Season,9) + !Integer.IsGreater(Container(10401).ListItem.Episode,9) + !String.Contains(Container(10401).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10401).ListItem.TVShowTitle][/LIGHT][CR]S0$INFO[Container(10401).ListItem.Season]E0$INFO[Container(10401).ListItem.Episode] • $INFO[Container(10401).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401) + !String.IsEmpty(Container(10401).ListItem.Season) + !Integer.IsGreater(Container(10401).ListItem.Season,9) + Integer.IsGreater(Container(10401).ListItem.Episode,9) + !String.Contains(Container(10401).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10401).ListItem.TVShowTitle][/LIGHT][CR]S0$INFO[Container(10401).ListItem.Season]E$INFO[Container(10401).ListItem.Episode] • $INFO[Container(10401).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401) + !String.IsEmpty(Container(10401).ListItem.Season) + Integer.IsGreater(Container(10401).ListItem.Season,9) + !Integer.IsGreater(Container(10401).ListItem.Episode,9) + !String.Contains(Container(10401).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10401).ListItem.TVShowTitle][/LIGHT][CR]S$INFO[Container(10401).ListItem.Season]E0$INFO[Container(10401).ListItem.Episode] • $INFO[Container(10401).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401) + !String.IsEmpty(Container(10401).ListItem.Season) + Integer.IsGreater(Container(10401).ListItem.Season,9) + Integer.IsGreater(Container(10401).ListItem.Episode,9) + !String.Contains(Container(10401).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10401).ListItem.TVShowTitle][/LIGHT][CR]S$INFO[Container(10401).ListItem.Season]E$INFO[Container(10401).ListItem.Episode] • $INFO[Container(10401).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401) + !String.IsEmpty(Container(10401).ListItem.Season) + String.Contains(Container(10401).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10401).ListItem.TVShowTitle][/LIGHT][CR]$INFO[Container(10401).ListItem.Episode,[UPPERCASE],[/UPPERCASE]] • $INFO[Container(10401).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401) + !IsEmpty(Container(10401).ListItem.ChannelName) + !IsEmpty(Container(10401).ListItem.StartTime) + !String.StartsWith(Container(10401).ListItem.Path,pvr://recordings/tv/) + [String.StartsWith(Container(10401).ListItem.Path,pvr://channels/) | String.StartsWith(Container(10401).ListItem.Path,pvr://timers/)]">[COLOR $VAR[TextColor1]]$INFO[Container(10401).ListItem.Label][CR][LIGHT]$INFO[Container(10401).ListItem.Title] ($INFO[Container(10401).ListItem.StartTime] - $INFO[Container(10401).ListItem.EndTime])[CR]$INFO[Container(10401).ListItem.NextTitle] ($INFO[Container(10401).ListItem.NextStartTime] - $INFO[Container(10401).ListItem.NextEndTime])[/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401) + !IsEmpty(Container(10401).ListItem.ChannelName) + !String.StartsWith(Container(10401).ListItem.Path,pvr://recordings/tv/) + [String.StartsWith(Container(10401).ListItem.Path,pvr://channels/) | String.StartsWith(Container(10401).ListItem.Path,pvr://timers/)]">[COLOR $VAR[TextColor1]]$INFO[Container(10401).ListItem.Label][CR][LIGHT]$LOCALIZE[19055][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401) + !IsEmpty(Container(10401).ListItem.StartTime) + String.StartsWith(Container(10401).ListItem.Path,pvr://recordings/tv/)">[COLOR $VAR[TextColor1]]$INFO[Container(10401).ListItem.Label][CR][LIGHT]$INFO[Container(10401).ListItem.StartDate]$INFO[Container(10401).ListItem.StartTime, - ,][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(10004) + Control.HasFocus(10401)">[COLOR $VAR[TextColor1]]$INFO[Container(10401).ListItem.Label][/COLOR]</value>
		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601) + Integer.IsEqual(Container(10601).NumItems,0)">$LOCALIZE[20186]...</value>
		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601) + False">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Window(Weather).Property(Location)][/LIGHT][CR]$INFO[Container(10601).ListItem.Property(outlook)][/COLOR]</value>
		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601) + !String.IsEmpty(Container(10601).ListItem.Property(WatchedEpisodes))">[COLOR $VAR[TextColor1]]$INFO[Container(10601).ListItem.TVShowTitle][CR][LIGHT]$LOCALIZE[16102] $INFO[Container(10601).ListItem.Property(WatchedEpisodes)] $LOCALIZE[20163] $INFO[Container(10601).ListItem.Property(NumEpisodes)] $LOCALIZE[20453][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601) + !String.IsEmpty(Container(10601).ListItem.Season) + !Integer.IsGreater(Container(10601).ListItem.Season,9) + !Integer.IsGreater(Container(10601).ListItem.Episode,9) + !String.Contains(Container(10601).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10601).ListItem.TVShowTitle][/LIGHT][CR]S0$INFO[Container(10601).ListItem.Season]E0$INFO[Container(10601).ListItem.Episode] • $INFO[Container(10601).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601) + !String.IsEmpty(Container(10601).ListItem.Season) + !Integer.IsGreater(Container(10601).ListItem.Season,9) + Integer.IsGreater(Container(10601).ListItem.Episode,9) + !String.Contains(Container(10601).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10601).ListItem.TVShowTitle][/LIGHT][CR]S0$INFO[Container(10601).ListItem.Season]E$INFO[Container(10601).ListItem.Episode] • $INFO[Container(10601).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601) + !String.IsEmpty(Container(10601).ListItem.Season) + Integer.IsGreater(Container(10601).ListItem.Season,9) + !Integer.IsGreater(Container(10601).ListItem.Episode,9) + !String.Contains(Container(10601).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10601).ListItem.TVShowTitle][/LIGHT][CR]S$INFO[Container(10601).ListItem.Season]E0$INFO[Container(10601).ListItem.Episode] • $INFO[Container(10601).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601) + !String.IsEmpty(Container(10601).ListItem.Season) + Integer.IsGreater(Container(10601).ListItem.Season,9) + Integer.IsGreater(Container(10601).ListItem.Episode,9) + !String.Contains(Container(10601).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10601).ListItem.TVShowTitle][/LIGHT][CR]S$INFO[Container(10601).ListItem.Season]E$INFO[Container(10601).ListItem.Episode] • $INFO[Container(10601).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601) + !String.IsEmpty(Container(10601).ListItem.Season) + String.Contains(Container(10601).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10601).ListItem.TVShowTitle][/LIGHT][CR]$INFO[Container(10601).ListItem.Episode,[UPPERCASE],[/UPPERCASE]] • $INFO[Container(10601).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601) + !IsEmpty(Container(10601).ListItem.ChannelName) + !IsEmpty(Container(10601).ListItem.StartTime) + !String.StartsWith(Container(10601).ListItem.Path,pvr://recordings/tv/) + [String.StartsWith(Container(10601).ListItem.Path,pvr://channels/) | String.StartsWith(Container(10601).ListItem.Path,pvr://timers/)]">[COLOR $VAR[TextColor1]]$INFO[Container(10601).ListItem.Label][CR][LIGHT]$INFO[Container(10601).ListItem.Title] ($INFO[Container(10601).ListItem.StartTime] - $INFO[Container(10601).ListItem.EndTime])[CR]$INFO[Container(10601).ListItem.NextTitle] ($INFO[Container(10601).ListItem.NextStartTime] - $INFO[Container(10601).ListItem.NextEndTime])[/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601) + !IsEmpty(Container(10601).ListItem.ChannelName) + !String.StartsWith(Container(10601).ListItem.Path,pvr://recordings/tv/) + [String.StartsWith(Container(10601).ListItem.Path,pvr://channels/) | String.StartsWith(Container(10601).ListItem.Path,pvr://timers/)]">[COLOR $VAR[TextColor1]]$INFO[Container(10601).ListItem.Label][CR][LIGHT]$LOCALIZE[19055][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601) + !IsEmpty(Container(10601).ListItem.StartTime) + String.StartsWith(Container(10601).ListItem.Path,pvr://recordings/tv/)">[COLOR $VAR[TextColor1]]$INFO[Container(10601).ListItem.Label][CR][LIGHT]$INFO[Container(10601).ListItem.StartDate]$INFO[Container(10601).ListItem.StartTime, - ,][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(10006) + Control.HasFocus(10601)">[COLOR $VAR[TextColor1]]$INFO[Container(10601).ListItem.Label][/COLOR]</value>
		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901) + Integer.IsEqual(Container(10901).NumItems,0)">$LOCALIZE[20186]...</value>
		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901) + False">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Window(Weather).Property(Location)][/LIGHT][CR]$INFO[Container(10901).ListItem.Property(outlook)][/COLOR]</value>
		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901) + !String.IsEmpty(Container(10901).ListItem.Property(WatchedEpisodes))">[COLOR $VAR[TextColor1]]$INFO[Container(10901).ListItem.TVShowTitle][CR][LIGHT]$LOCALIZE[16102] $INFO[Container(10901).ListItem.Property(WatchedEpisodes)] $LOCALIZE[20163] $INFO[Container(10901).ListItem.Property(NumEpisodes)] $LOCALIZE[20453][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901) + !String.IsEmpty(Container(10901).ListItem.Season) + !Integer.IsGreater(Container(10901).ListItem.Season,9) + !Integer.IsGreater(Container(10901).ListItem.Episode,9) + !String.Contains(Container(10901).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10901).ListItem.TVShowTitle][/LIGHT][CR]S0$INFO[Container(10901).ListItem.Season]E0$INFO[Container(10901).ListItem.Episode] • $INFO[Container(10901).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901) + !String.IsEmpty(Container(10901).ListItem.Season) + !Integer.IsGreater(Container(10901).ListItem.Season,9) + Integer.IsGreater(Container(10901).ListItem.Episode,9) + !String.Contains(Container(10901).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10901).ListItem.TVShowTitle][/LIGHT][CR]S0$INFO[Container(10901).ListItem.Season]E$INFO[Container(10901).ListItem.Episode] • $INFO[Container(10901).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901) + !String.IsEmpty(Container(10901).ListItem.Season) + Integer.IsGreater(Container(10901).ListItem.Season,9) + !Integer.IsGreater(Container(10901).ListItem.Episode,9) + !String.Contains(Container(10901).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10901).ListItem.TVShowTitle][/LIGHT][CR]S$INFO[Container(10901).ListItem.Season]E0$INFO[Container(10901).ListItem.Episode] • $INFO[Container(10901).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901) + !String.IsEmpty(Container(10901).ListItem.Season) + Integer.IsGreater(Container(10901).ListItem.Season,9) + Integer.IsGreater(Container(10901).ListItem.Episode,9) + !String.Contains(Container(10901).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10901).ListItem.TVShowTitle][/LIGHT][CR]S$INFO[Container(10901).ListItem.Season]E$INFO[Container(10901).ListItem.Episode] • $INFO[Container(10901).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901) + !String.IsEmpty(Container(10901).ListItem.Season) + String.Contains(Container(10901).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(10901).ListItem.TVShowTitle][/LIGHT][CR]$INFO[Container(10901).ListItem.Episode,[UPPERCASE],[/UPPERCASE]] • $INFO[Container(10901).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901) + !IsEmpty(Container(10901).ListItem.ChannelName) + !IsEmpty(Container(10901).ListItem.StartTime) + !String.StartsWith(Container(10901).ListItem.Path,pvr://recordings/tv/) + [String.StartsWith(Container(10901).ListItem.Path,pvr://channels/) | String.StartsWith(Container(10901).ListItem.Path,pvr://timers/)]">[COLOR $VAR[TextColor1]]$INFO[Container(10901).ListItem.Label][CR][LIGHT]$INFO[Container(10901).ListItem.Title] ($INFO[Container(10901).ListItem.StartTime] - $INFO[Container(10901).ListItem.EndTime])[CR]$INFO[Container(10901).ListItem.NextTitle] ($INFO[Container(10901).ListItem.NextStartTime] - $INFO[Container(10901).ListItem.NextEndTime])[/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901) + !IsEmpty(Container(10901).ListItem.ChannelName) + !String.StartsWith(Container(10901).ListItem.Path,pvr://recordings/tv/) + [String.StartsWith(Container(10901).ListItem.Path,pvr://channels/) | String.StartsWith(Container(10901).ListItem.Path,pvr://timers/)]">[COLOR $VAR[TextColor1]]$INFO[Container(10901).ListItem.Label][CR][LIGHT]$LOCALIZE[19055][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901) + !IsEmpty(Container(10901).ListItem.StartTime) + String.StartsWith(Container(10901).ListItem.Path,pvr://recordings/tv/)">[COLOR $VAR[TextColor1]]$INFO[Container(10901).ListItem.Label][CR][LIGHT]$INFO[Container(10901).ListItem.StartDate]$INFO[Container(10901).ListItem.StartTime, - ,][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(10009) + Control.HasFocus(10901)">[COLOR $VAR[TextColor1]]$INFO[Container(10901).ListItem.Label][/COLOR]</value>
		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + Integer.IsEqual(Container(101001).NumItems,0)">$LOCALIZE[20186]...</value>
		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + False">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Window(Weather).Property(Location)][/LIGHT][CR]$INFO[Container(101001).ListItem.Property(outlook)][/COLOR]</value>
		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + !String.IsEmpty(Container(101001).ListItem.Property(WatchedEpisodes))">[COLOR $VAR[TextColor1]]$INFO[Container(101001).ListItem.TVShowTitle][CR][LIGHT]$LOCALIZE[16102] $INFO[Container(101001).ListItem.Property(WatchedEpisodes)] $LOCALIZE[20163] $INFO[Container(101001).ListItem.Property(NumEpisodes)] $LOCALIZE[20453][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + !String.IsEmpty(Container(101001).ListItem.Season) + !Integer.IsGreater(Container(101001).ListItem.Season,9) + !Integer.IsGreater(Container(101001).ListItem.Episode,9) + !String.Contains(Container(101001).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(101001).ListItem.TVShowTitle][/LIGHT][CR]S0$INFO[Container(101001).ListItem.Season]E0$INFO[Container(101001).ListItem.Episode] • $INFO[Container(101001).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + !String.IsEmpty(Container(101001).ListItem.Season) + !Integer.IsGreater(Container(101001).ListItem.Season,9) + Integer.IsGreater(Container(101001).ListItem.Episode,9) + !String.Contains(Container(101001).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(101001).ListItem.TVShowTitle][/LIGHT][CR]S0$INFO[Container(101001).ListItem.Season]E$INFO[Container(101001).ListItem.Episode] • $INFO[Container(101001).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + !String.IsEmpty(Container(101001).ListItem.Season) + Integer.IsGreater(Container(101001).ListItem.Season,9) + !Integer.IsGreater(Container(101001).ListItem.Episode,9) + !String.Contains(Container(101001).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(101001).ListItem.TVShowTitle][/LIGHT][CR]S$INFO[Container(101001).ListItem.Season]E0$INFO[Container(101001).ListItem.Episode] • $INFO[Container(101001).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + !String.IsEmpty(Container(101001).ListItem.Season) + Integer.IsGreater(Container(101001).ListItem.Season,9) + Integer.IsGreater(Container(101001).ListItem.Episode,9) + !String.Contains(Container(101001).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(101001).ListItem.TVShowTitle][/LIGHT][CR]S$INFO[Container(101001).ListItem.Season]E$INFO[Container(101001).ListItem.Episode] • $INFO[Container(101001).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + !String.IsEmpty(Container(101001).ListItem.Season) + String.Contains(Container(101001).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(101001).ListItem.TVShowTitle][/LIGHT][CR]$INFO[Container(101001).ListItem.Episode,[UPPERCASE],[/UPPERCASE]] • $INFO[Container(101001).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + !IsEmpty(Container(101001).ListItem.ChannelName) + !IsEmpty(Container(101001).ListItem.StartTime) + !String.StartsWith(Container(101001).ListItem.Path,pvr://recordings/tv/) + [String.StartsWith(Container(101001).ListItem.Path,pvr://channels/) | String.StartsWith(Container(101001).ListItem.Path,pvr://timers/)]">[COLOR $VAR[TextColor1]]$INFO[Container(101001).ListItem.Label][CR][LIGHT]$INFO[Container(101001).ListItem.Title] ($INFO[Container(101001).ListItem.StartTime] - $INFO[Container(101001).ListItem.EndTime])[CR]$INFO[Container(101001).ListItem.NextTitle] ($INFO[Container(101001).ListItem.NextStartTime] - $INFO[Container(101001).ListItem.NextEndTime])[/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + !IsEmpty(Container(101001).ListItem.ChannelName) + !String.StartsWith(Container(101001).ListItem.Path,pvr://recordings/tv/) + [String.StartsWith(Container(101001).ListItem.Path,pvr://channels/) | String.StartsWith(Container(101001).ListItem.Path,pvr://timers/)]">[COLOR $VAR[TextColor1]]$INFO[Container(101001).ListItem.Label][CR][LIGHT]$LOCALIZE[19055][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001) + !IsEmpty(Container(101001).ListItem.StartTime) + String.StartsWith(Container(101001).ListItem.Path,pvr://recordings/tv/)">[COLOR $VAR[TextColor1]]$INFO[Container(101001).ListItem.Label][CR][LIGHT]$INFO[Container(101001).ListItem.StartDate]$INFO[Container(101001).ListItem.StartTime, - ,][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(100010) + Control.HasFocus(101001)">[COLOR $VAR[TextColor1]]$INFO[Container(101001).ListItem.Label][/COLOR]</value>
		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101) + Integer.IsEqual(Container(101101).NumItems,0)">$LOCALIZE[20186]...</value>
		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101) + False">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Window(Weather).Property(Location)][/LIGHT][CR]$INFO[Container(101101).ListItem.Property(outlook)][/COLOR]</value>
		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101) + !String.IsEmpty(Container(101101).ListItem.Property(WatchedEpisodes))">[COLOR $VAR[TextColor1]]$INFO[Container(101101).ListItem.TVShowTitle][CR][LIGHT]$LOCALIZE[16102] $INFO[Container(101101).ListItem.Property(WatchedEpisodes)] $LOCALIZE[20163] $INFO[Container(101101).ListItem.Property(NumEpisodes)] $LOCALIZE[20453][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101) + !String.IsEmpty(Container(101101).ListItem.Season) + !Integer.IsGreater(Container(101101).ListItem.Season,9) + !Integer.IsGreater(Container(101101).ListItem.Episode,9) + !String.Contains(Container(101101).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(101101).ListItem.TVShowTitle][/LIGHT][CR]S0$INFO[Container(101101).ListItem.Season]E0$INFO[Container(101101).ListItem.Episode] • $INFO[Container(101101).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101) + !String.IsEmpty(Container(101101).ListItem.Season) + !Integer.IsGreater(Container(101101).ListItem.Season,9) + Integer.IsGreater(Container(101101).ListItem.Episode,9) + !String.Contains(Container(101101).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(101101).ListItem.TVShowTitle][/LIGHT][CR]S0$INFO[Container(101101).ListItem.Season]E$INFO[Container(101101).ListItem.Episode] • $INFO[Container(101101).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101) + !String.IsEmpty(Container(101101).ListItem.Season) + Integer.IsGreater(Container(101101).ListItem.Season,9) + !Integer.IsGreater(Container(101101).ListItem.Episode,9) + !String.Contains(Container(101101).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(101101).ListItem.TVShowTitle][/LIGHT][CR]S$INFO[Container(101101).ListItem.Season]E0$INFO[Container(101101).ListItem.Episode] • $INFO[Container(101101).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101) + !String.IsEmpty(Container(101101).ListItem.Season) + Integer.IsGreater(Container(101101).ListItem.Season,9) + Integer.IsGreater(Container(101101).ListItem.Episode,9) + !String.Contains(Container(101101).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(101101).ListItem.TVShowTitle][/LIGHT][CR]S$INFO[Container(101101).ListItem.Season]E$INFO[Container(101101).ListItem.Episode] • $INFO[Container(101101).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101) + !String.IsEmpty(Container(101101).ListItem.Season) + String.Contains(Container(101101).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(101101).ListItem.TVShowTitle][/LIGHT][CR]$INFO[Container(101101).ListItem.Episode,[UPPERCASE],[/UPPERCASE]] • $INFO[Container(101101).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101) + !IsEmpty(Container(101101).ListItem.ChannelName) + !IsEmpty(Container(101101).ListItem.StartTime) + !String.StartsWith(Container(101101).ListItem.Path,pvr://recordings/tv/) + [String.StartsWith(Container(101101).ListItem.Path,pvr://channels/) | String.StartsWith(Container(101101).ListItem.Path,pvr://timers/)]">[COLOR $VAR[TextColor1]]$INFO[Container(101101).ListItem.Label][CR][LIGHT]$INFO[Container(101101).ListItem.Title] ($INFO[Container(101101).ListItem.StartTime] - $INFO[Container(101101).ListItem.EndTime])[CR]$INFO[Container(101101).ListItem.NextTitle] ($INFO[Container(101101).ListItem.NextStartTime] - $INFO[Container(101101).ListItem.NextEndTime])[/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101) + !IsEmpty(Container(101101).ListItem.ChannelName) + !String.StartsWith(Container(101101).ListItem.Path,pvr://recordings/tv/) + [String.StartsWith(Container(101101).ListItem.Path,pvr://channels/) | String.StartsWith(Container(101101).ListItem.Path,pvr://timers/)]">[COLOR $VAR[TextColor1]]$INFO[Container(101101).ListItem.Label][CR][LIGHT]$LOCALIZE[19055][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101) + !IsEmpty(Container(101101).ListItem.StartTime) + String.StartsWith(Container(101101).ListItem.Path,pvr://recordings/tv/)">[COLOR $VAR[TextColor1]]$INFO[Container(101101).ListItem.Label][CR][LIGHT]$INFO[Container(101101).ListItem.StartDate]$INFO[Container(101101).ListItem.StartTime, - ,][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(100011) + Control.HasFocus(101101)">[COLOR $VAR[TextColor1]]$INFO[Container(101101).ListItem.Label][/COLOR]</value>
		<value condition="Control.IsVisible(100013) + Control.HasFocus(101301) + Integer.IsEqual(Container(101301).NumItems,0)">$LOCALIZE[20186]...</value>
		<value condition="Control.IsVisible(100013) + Control.HasFocus(101301) + False">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Window(Weather).Property(Location)][/LIGHT][CR]$INFO[Container(101301).ListItem.Property(outlook)][/COLOR]</value>
		<value condition="Control.IsVisible(100013) + Control.HasFocus(101301) + !String.IsEmpty(Container(101301).ListItem.Property(WatchedEpisodes))">[COLOR $VAR[TextColor1]]$INFO[Container(101301).ListItem.TVShowTitle][CR][LIGHT]$LOCALIZE[16102] $INFO[Container(101301).ListItem.Property(WatchedEpisodes)] $LOCALIZE[20163] $INFO[Container(101301).ListItem.Property(NumEpisodes)] $LOCALIZE[20453][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(100013) + Control.HasFocus(101301) + !String.IsEmpty(Container(101301).ListItem.Season) + !Integer.IsGreater(Container(101301).ListItem.Season,9) + !Integer.IsGreater(Container(101301).ListItem.Episode,9) + !String.Contains(Container(101301).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(101301).ListItem.TVShowTitle][/LIGHT][CR]S0$INFO[Container(101301).ListItem.Season]E0$INFO[Container(101301).ListItem.Episode] • $INFO[Container(101301).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(100013) + Control.HasFocus(101301) + !String.IsEmpty(Container(101301).ListItem.Season) + !Integer.IsGreater(Container(101301).ListItem.Season,9) + Integer.IsGreater(Container(101301).ListItem.Episode,9) + !String.Contains(Container(101301).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(101301).ListItem.TVShowTitle][/LIGHT][CR]S0$INFO[Container(101301).ListItem.Season]E$INFO[Container(101301).ListItem.Episode] • $INFO[Container(101301).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(100013) + Control.HasFocus(101301) + !String.IsEmpty(Container(101301).ListItem.Season) + Integer.IsGreater(Container(101301).ListItem.Season,9) + !Integer.IsGreater(Container(101301).ListItem.Episode,9) + !String.Contains(Container(101301).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(101301).ListItem.TVShowTitle][/LIGHT][CR]S$INFO[Container(101301).ListItem.Season]E0$INFO[Container(101301).ListItem.Episode] • $INFO[Container(101301).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(100013) + Control.HasFocus(101301) + !String.IsEmpty(Container(101301).ListItem.Season) + Integer.IsGreater(Container(101301).ListItem.Season,9) + Integer.IsGreater(Container(101301).ListItem.Episode,9) + !String.Contains(Container(101301).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(101301).ListItem.TVShowTitle][/LIGHT][CR]S$INFO[Container(101301).ListItem.Season]E$INFO[Container(101301).ListItem.Episode] • $INFO[Container(101301).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(100013) + Control.HasFocus(101301) + !String.IsEmpty(Container(101301).ListItem.Season) + String.Contains(Container(101301).ListItem.Episode,s)">[COLOR $VAR[TextColor1]][LIGHT]$INFO[Container(101301).ListItem.TVShowTitle][/LIGHT][CR]$INFO[Container(101301).ListItem.Episode,[UPPERCASE],[/UPPERCASE]] • $INFO[Container(101301).ListItem.Title][/COLOR]</value>
		<value condition="Control.IsVisible(100013) + Control.HasFocus(101301) + !IsEmpty(Container(101301).ListItem.ChannelName) + !IsEmpty(Container(101301).ListItem.StartTime) + !String.StartsWith(Container(101301).ListItem.Path,pvr://recordings/tv/) + [String.StartsWith(Container(101301).ListItem.Path,pvr://channels/) | String.StartsWith(Container(101301).ListItem.Path,pvr://timers/)]">[COLOR $VAR[TextColor1]]$INFO[Container(101301).ListItem.Label][CR][LIGHT]$INFO[Container(101301).ListItem.Title] ($INFO[Container(101301).ListItem.StartTime] - $INFO[Container(101301).ListItem.EndTime])[CR]$INFO[Container(101301).ListItem.NextTitle] ($INFO[Container(101301).ListItem.NextStartTime] - $INFO[Container(101301).ListItem.NextEndTime])[/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(100013) + Control.HasFocus(101301) + !IsEmpty(Container(101301).ListItem.ChannelName) + !String.StartsWith(Container(101301).ListItem.Path,pvr://recordings/tv/) + [String.StartsWith(Container(101301).ListItem.Path,pvr://channels/) | String.StartsWith(Container(101301).ListItem.Path,pvr://timers/)]">[COLOR $VAR[TextColor1]]$INFO[Container(101301).ListItem.Label][CR][LIGHT]$LOCALIZE[19055][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(100013) + Control.HasFocus(101301) + !IsEmpty(Container(101301).ListItem.StartTime) + String.StartsWith(Container(101301).ListItem.Path,pvr://recordings/tv/)">[COLOR $VAR[TextColor1]]$INFO[Container(101301).ListItem.Label][CR][LIGHT]$INFO[Container(101301).ListItem.StartDate]$INFO[Container(101301).ListItem.StartTime, - ,][/LIGHT][/COLOR]</value>
		<value condition="Control.IsVisible(100013) + Control.HasFocus(101301)">[COLOR $VAR[TextColor1]]$INFO[Container(101301).ListItem.Label][/COLOR]</value>
		</variable>
	<variable name="widgetBackground">
		<value condition="Window.Is(Home) + Control.IsVisible(10001) + [Control.HasFocus(10101) | String.IsEqual(Skin.String(menuStyle),lumos)] + !False">$INFO[Container(10101).ListItem.Art(fanart)]</value>
		<value condition="Window.Is(Home) + Control.IsVisible(10001) + [Control.HasFocus(10101) | String.IsEqual(Skin.String(menuStyle),lumos)] + [False + !Skin.HasSetting(weatherFanart.multi)]">$INFO[Skin.String(weatherFanart.path)]$INFO[Container(10101).ListItem.Property(weatherFanart)]$INFO[Skin.String(weatherFanart.ext)]</value>
		<value condition="Window.Is(Home) + Control.IsVisible(10001) + [Control.HasFocus(10101) | String.IsEqual(Skin.String(menuStyle),lumos)] + [False + Skin.HasSetting(weatherFanart.multi)]">$INFO[Skin.String(weatherFanart.path)]$INFO[Container(10101).ListItem.Property(weatherFanart)]/</value>
		<value condition="!Window.Is(Home) + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="[Window.IsActive(visualisation) | Skin.HasSetting(BackgroundVisualisation)] + !String.IsEmpty(MusicPlayer.Property(Fanart_Image))">$INFO[MusicPlayer.Property(Fanart_Image)]</value>
		<value condition="Window.Is(Home) + Control.IsVisible(10002) + [Control.HasFocus(10201) | String.IsEqual(Skin.String(menuStyle),lumos)] + !False">$INFO[Container(10201).ListItem.Art(fanart)]</value>
		<value condition="Window.Is(Home) + Control.IsVisible(10002) + [Control.HasFocus(10201) | String.IsEqual(Skin.String(menuStyle),lumos)] + [False + !Skin.HasSetting(weatherFanart.multi)]">$INFO[Skin.String(weatherFanart.path)]$INFO[Container(10201).ListItem.Property(weatherFanart)]$INFO[Skin.String(weatherFanart.ext)]</value>
		<value condition="Window.Is(Home) + Control.IsVisible(10002) + [Control.HasFocus(10201) | String.IsEqual(Skin.String(menuStyle),lumos)] + [False + Skin.HasSetting(weatherFanart.multi)]">$INFO[Skin.String(weatherFanart.path)]$INFO[Container(10201).ListItem.Property(weatherFanart)]/</value>
		<value condition="Window.Is(Home) + Control.IsVisible(10004) + [Control.HasFocus(10401) | String.IsEqual(Skin.String(menuStyle),lumos)] + !False">$INFO[Container(10401).ListItem.Art(fanart)]</value>
		<value condition="Window.Is(Home) + Control.IsVisible(10004) + [Control.HasFocus(10401) | String.IsEqual(Skin.String(menuStyle),lumos)] + [False + !Skin.HasSetting(weatherFanart.multi)]">$INFO[Skin.String(weatherFanart.path)]$INFO[Container(10401).ListItem.Property(weatherFanart)]$INFO[Skin.String(weatherFanart.ext)]</value>
		<value condition="Window.Is(Home) + Control.IsVisible(10004) + [Control.HasFocus(10401) | String.IsEqual(Skin.String(menuStyle),lumos)] + [False + Skin.HasSetting(weatherFanart.multi)]">$INFO[Skin.String(weatherFanart.path)]$INFO[Container(10401).ListItem.Property(weatherFanart)]/</value>
		<value condition="Window.Is(Home) + Control.IsVisible(10006) + [Control.HasFocus(10601) | String.IsEqual(Skin.String(menuStyle),lumos)] + !False">$INFO[Container(10601).ListItem.Art(fanart)]</value>
		<value condition="Window.Is(Home) + Control.IsVisible(10006) + [Control.HasFocus(10601) | String.IsEqual(Skin.String(menuStyle),lumos)] + [False + !Skin.HasSetting(weatherFanart.multi)]">$INFO[Skin.String(weatherFanart.path)]$INFO[Container(10601).ListItem.Property(weatherFanart)]$INFO[Skin.String(weatherFanart.ext)]</value>
		<value condition="Window.Is(Home) + Control.IsVisible(10006) + [Control.HasFocus(10601) | String.IsEqual(Skin.String(menuStyle),lumos)] + [False + Skin.HasSetting(weatherFanart.multi)]">$INFO[Skin.String(weatherFanart.path)]$INFO[Container(10601).ListItem.Property(weatherFanart)]/</value>
		<value condition="Window.Is(Home) + Control.IsVisible(10009) + [Control.HasFocus(10901) | String.IsEqual(Skin.String(menuStyle),lumos)] + !False">$INFO[Container(10901).ListItem.Art(fanart)]</value>
		<value condition="Window.Is(Home) + Control.IsVisible(10009) + [Control.HasFocus(10901) | String.IsEqual(Skin.String(menuStyle),lumos)] + [False + !Skin.HasSetting(weatherFanart.multi)]">$INFO[Skin.String(weatherFanart.path)]$INFO[Container(10901).ListItem.Property(weatherFanart)]$INFO[Skin.String(weatherFanart.ext)]</value>
		<value condition="Window.Is(Home) + Control.IsVisible(10009) + [Control.HasFocus(10901) | String.IsEqual(Skin.String(menuStyle),lumos)] + [False + Skin.HasSetting(weatherFanart.multi)]">$INFO[Skin.String(weatherFanart.path)]$INFO[Container(10901).ListItem.Property(weatherFanart)]/</value>
		<value condition="Window.Is(Home) + Control.IsVisible(100010) + [Control.HasFocus(101001) | String.IsEqual(Skin.String(menuStyle),lumos)] + !False">$INFO[Container(101001).ListItem.Art(fanart)]</value>
		<value condition="Window.Is(Home) + Control.IsVisible(100010) + [Control.HasFocus(101001) | String.IsEqual(Skin.String(menuStyle),lumos)] + [False + !Skin.HasSetting(weatherFanart.multi)]">$INFO[Skin.String(weatherFanart.path)]$INFO[Container(101001).ListItem.Property(weatherFanart)]$INFO[Skin.String(weatherFanart.ext)]</value>
		<value condition="Window.Is(Home) + Control.IsVisible(100010) + [Control.HasFocus(101001) | String.IsEqual(Skin.String(menuStyle),lumos)] + [False + Skin.HasSetting(weatherFanart.multi)]">$INFO[Skin.String(weatherFanart.path)]$INFO[Container(101001).ListItem.Property(weatherFanart)]/</value>
		<value condition="Window.Is(Home) + Control.IsVisible(100011) + [Control.HasFocus(101101) | String.IsEqual(Skin.String(menuStyle),lumos)] + !False">$INFO[Container(101101).ListItem.Art(fanart)]</value>
		<value condition="Window.Is(Home) + Control.IsVisible(100011) + [Control.HasFocus(101101) | String.IsEqual(Skin.String(menuStyle),lumos)] + [False + !Skin.HasSetting(weatherFanart.multi)]">$INFO[Skin.String(weatherFanart.path)]$INFO[Container(101101).ListItem.Property(weatherFanart)]$INFO[Skin.String(weatherFanart.ext)]</value>
		<value condition="Window.Is(Home) + Control.IsVisible(100011) + [Control.HasFocus(101101) | String.IsEqual(Skin.String(menuStyle),lumos)] + [False + Skin.HasSetting(weatherFanart.multi)]">$INFO[Skin.String(weatherFanart.path)]$INFO[Container(101101).ListItem.Property(weatherFanart)]/</value>
		<value condition="Window.Is(Home) + Control.IsVisible(100013) + [Control.HasFocus(101301) | String.IsEqual(Skin.String(menuStyle),lumos)] + !False">$INFO[Container(101301).ListItem.Art(fanart)]</value>
		<value condition="Window.Is(Home) + Control.IsVisible(100013) + [Control.HasFocus(101301) | String.IsEqual(Skin.String(menuStyle),lumos)] + [False + !Skin.HasSetting(weatherFanart.multi)]">$INFO[Skin.String(weatherFanart.path)]$INFO[Container(101301).ListItem.Property(weatherFanart)]$INFO[Skin.String(weatherFanart.ext)]</value>
		<value condition="Window.Is(Home) + Control.IsVisible(100013) + [Control.HasFocus(101301) | String.IsEqual(Skin.String(menuStyle),lumos)] + [False + Skin.HasSetting(weatherFanart.multi)]">$INFO[Skin.String(weatherFanart.path)]$INFO[Container(101301).ListItem.Property(weatherFanart)]/</value>
		<value>$VAR[OtherBackgroundImage]</value>
		</variable>
	<variable name="SeasonContainerArgs">
		<value>S$INFO[Container(10101).ListItem.Season]</value>
		<value>S$INFO[Container(10201).ListItem.Season]</value>
		<value>S$INFO[Container(10401).ListItem.Season]</value>
		<value>S$INFO[Container(10601).ListItem.Season]</value>
		<value>S$INFO[Container(10901).ListItem.Season]</value>
		<value>S$INFO[Container(101001).ListItem.Season]</value>
		<value>S$INFO[Container(101101).ListItem.Season]</value>
		<value>S$INFO[Container(101301).ListItem.Season]</value>
		</variable>
	</includes>
